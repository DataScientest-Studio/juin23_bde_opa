version: '3'

services:
  financial_data_reader:
    image: opa/financial_data_reader
    build:
      context: .
      dockerfile: ./financial_data_reader.Dockerfile
    # With a ~5s database query timeout, the reader will crash on a cold startup (while the
    # database is still initializing).
    # TODO: Investigate if it's a proper solution.
    restart: on-failure
    depends_on:
      - database
    environment:
      USE_HTTP_CACHE: True
    volumes:
      - http-cache:/var/http_cache
    secrets:
      - fmp_cloud_api_key
      - mongodb_username
      - mongodb_password

  database:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongodb_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongodb_password
      MONGO_INITDB_DATABASE: stock_market
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - db-data:/data/db
    secrets:
      - mongodb_username
      - mongodb_password

  data_report:
    image: opa/data_report
    build:
      context: .
      dockerfile: ./data_report.Dockerfile
    ports:
      - 8050:8050
    environment:
      HOST: 0.0.0.0
    depends_on:
      - database
    secrets:
      - mongodb_username
      - mongodb_password

  internal_api:
    image: opa/api
    build:
      context: .
      dockerfile: ./api.Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - database
    secrets:
      - mongodb_username
      - mongodb_password

  machine_learning:
    image: alpine
    command: echo "Hello from machine learning"

secrets:
  fmp_cloud_api_key:
    file: secrets/fmp_cloud_api_key
  mongodb_username:
    file: secrets/mongodb_username
  mongodb_password:
    file: secrets/mongodb_password

volumes:
  db-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './app_data/db'

  http-cache:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './app_data/http_cache'
